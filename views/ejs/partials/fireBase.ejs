<script src="https://cdn.firebase.com/libs/firebaseui/3.5.2/firebaseui.js"></script>
<link type="text/css" rel="stylesheet" href="https://cdn.firebase.com/libs/firebaseui/3.5.2/firebaseui.css" />
<!-- The core Firebase JS SDK is always required and must be listed first -->
<script src="https://www.gstatic.com/firebasejs/7.19.1/firebase-app.js"></script>
<!-- TODO: Add SDKs for Firebase products that you want to use
 https://firebase.google.com/docs/web/setup#available-libraries -->
<script src="https://www.gstatic.com/firebasejs/7.19.1/firebase-analytics.js"></script>
<script src="https://www.gstatic.com/firebasejs/ui/4.4.0/firebase-ui-auth.js"></script>
<link type="text/css" rel="stylesheet" href="https://www.gstatic.com/firebasejs/ui/4.4.0/firebase-ui-auth.css" />
<script src="https://www.gstatic.com/firebasejs/7.6.0/firebase-auth.js"></script>


<script>

function setCookie(name, value, exp){
            var expires = "";
            if (exp) {
              var date = new Date();
              date.setTime(date.getTime() + (exp * 1000 * 60));
              expires = "; expires=" + date.toUTCString();
            }
            document.cookie = name + "=" + (value || "") + expires + "; path=/";
            //alert(name + "=" + (value || "") + expires + "; path=/");
            
          }

          function getCookie(name) {
            var nameEQ = name + "=";
            var ca = document.cookie.split(';');
            for (var i = 0; i < ca.length; i++) {
              var c = ca[i];
              while (c.charAt(0) == ' ') c = c.substring(1, c.length);
              if (c.indexOf(nameEQ) == 0) return c.substring(nameEQ.length, c.length);
            }
            return null;
          }



</script>




<script>
    // Your web app's Firebase configuration
    var firebaseConfig = {
        apiKey: "AIzaSyDKPQsmZM727nPyv5OYem2YEPgVVYgq75E",
        authDomain: "rutine.firebaseapp.com",
        databaseURL: "https://rutine.firebaseio.com",
        projectId: "rutine",
        storageBucket: "rutine.appspot.com",
        messagingSenderId: "930100384443",
        appId: "1:930100384443:web:2f221d694dc77a4fbdcf9e",
        measurementId: "G-E1F4ZHZCSK"
    };
    // Initialize Firebase
    firebase.initializeApp(firebaseConfig);
    firebase.analytics();
</script>


<script type="text/javascript">
    // FirebaseUI config.
    var uiConfig = {
        signInSuccessUrl: `http://${location.hostname}:8080/home`,
        signInOptions: [
            // Leave the lines as is for the providers you want to offer your users.
            firebase.auth.GoogleAuthProvider.PROVIDER_ID
            /*firebase.auth.FacebookAuthProvider.PROVIDER_ID,
            firebase.auth.TwitterAuthProvider.PROVIDER_ID,
            firebase.auth.GithubAuthProvider.PROVIDER_ID,
            firebase.auth.EmailAuthProvider.PROVIDER_ID,
            firebase.auth.PhoneAuthProvider.PROVIDER_ID,
            firebaseui.auth.AnonymousAuthProvider.PROVIDER_ID*/
        ]
    };

    // Initialize the FirebaseUI Widget using Firebase.
    var ui = new firebaseui.auth.AuthUI(firebase.auth());
    // The start method will wait until the DOM is loaded.
    ui.start('#firebaseui-auth-container', uiConfig);
</script>




<script type="text/javascript">
    initApp = function() {
      firebase.auth().onAuthStateChanged(function(user) {
        if (user) {
          // User is signed in.
        
          var email = user.email;
            console.log('User Info:');
            console.log('Email: ' + email); // This is null if the 'email' scope is not present.\
            setCookie('securityContextId', email, 30);
            
        }
      }, function(error) {
        console.log(error);
      });
    };

    window.addEventListener('load', function() {
      initApp();
    });
  </script>